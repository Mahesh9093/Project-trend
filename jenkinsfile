pipeline {
    agent any

    environment {
        AWS_REGION   = "ap-south-1"
        CLUSTER_NAME = "project-trend"
    }

    stages {
        stage("Code Clone") {
            steps {
                echo "Code Clone Stage"
                git url: "https://github.com/Mahesh9093/Project-trend.git", branch: "main"
            }
        }

        stage("Code Build & Test") {
            steps {
                echo "Code Build Stage"
                sh "docker build -t project-trend-app ."
            }
        }

        stage("Push To DockerHub") {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: "docker-hub-cred",
                    usernameVariable: "dockerHubUser", 
                    passwordVariable: "dockerHubPass")]) {

                    sh 'echo $dockerHubPass | docker login -u $dockerHubUser --password-stdin'
                    sh "docker tag project-trend-app:latest $dockerHubUser/project-trend:latest"
                    sh "docker push $dockerHubUser/project-trend:latest"
                    
                    // Save the username in a file to pass to the next stage
                    sh 'echo $dockerHubUser > dockerHubUser.txt'
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                // Retrieve the username saved in the previous stage
                script {
                    
                

                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-eks']]) {
                    sh """
                    aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME --kubeconfig /var/lib/jenkins/.kube/config
                    chown -R jenkins:jenkins /var/lib/jenkins/.kube
                    kubectl --kubeconfig /var/lib/jenkins/.kube/config apply -f k8s/deployment.yml
                    kubectl --kubeconfig /var/lib/jenkins/.kube/config apply -f k8s/service.yml
                    
                    """
                  }
                }
            }
        }
    }
}
